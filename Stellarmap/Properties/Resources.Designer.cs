//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stellarmap.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Stellarmap.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap _default {
            get {
                object obj = ResourceManager.GetObject("_default", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap armor {
            get {
                object obj = ResourceManager.GetObject("armor", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap bank {
            get {
                object obj = ResourceManager.GetObject("bank", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap bar {
            get {
                object obj = ResourceManager.GetObject("bar", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;vendor_types.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        //////Stellarmap Generator Metacode, do not modify
        ///inherit LIB_BARKEEP;
        //////StellarmapCode:Inherit
        ///
        ///
        ///static void create() {
        ///    ::create();
        ///    SetKeyName(&quot;barkeep&quot;);
        ///    SetId( ({ &quot;barman&quot; }) );
        ///    SetShort(&quot;a generic barkeep&quot;);
        ///    SetLevel(1);
        ///    SetLong(&quot;A nondescript being whose job is to sell food and drink.&quot;);
        ///    SetMenuItems(([
        ///                ]));
        ///    SetGender(&quot;male&quot;);
        ///    SetRace(&quot;human&quot;);
        ///    SetClass(&quot;vitalnp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string barkeep {
            get {
                return ResourceManager.GetString("barkeep", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap clothingstore {
            get {
                object obj = ResourceManager.GetObject("clothingstore", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;stellarmap&gt;
        ///	&lt;imageboxes width=&quot;50&quot; height=&quot;50&quot; /&gt;
        ///	&lt;nodeboxes width=&quot;10&quot; height=&quot;10&quot; /&gt;
        ///	&lt;baseroom name=&quot;room&quot; /&gt;
        ///	&lt;startroom name=&quot;start&quot; /&gt;
        ///	&lt;exitlinewidth width=&quot;1&quot; /&gt;
        ///	&lt;lastdiropened path=&quot;&quot; /&gt;
        ///	&lt;lpcencoding type=&quot;utf-8 (no signature)&quot; /&gt;
        ///	&lt;lpclineending type =&quot;Unix (LF)&quot; /&gt;
        ///	&lt;spellcheck_aff name =&quot;en_US.aff&quot; /&gt;
        ///	&lt;spellcheck_dic name =&quot;en_US.dic&quot; /&gt;
        ///	
        ///	&lt;icons&gt;
        ///		&lt;icon file=&quot;\deathtrap.bmp&quot; desc=&quot;It&apos;s a trap!&quot;&gt;&lt;/icon&gt;
        ///		&lt;icon file=&quot;\entranceexit.bm [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string config {
            get {
                return ResourceManager.GetString("config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;stellarmap&gt;
        ///	&lt;imageboxes width=&quot;45&quot; height=&quot;45&quot; /&gt;
        ///	&lt;nodeboxes width=&quot;11&quot; height=&quot;11&quot; /&gt;
        ///	&lt;baseroom name=&quot;room&quot; /&gt;
        ///	&lt;startroom name=&quot;start&quot; /&gt;
        ///	&lt;exitlinewidth width=&quot;1&quot; /&gt;
        ///	&lt;lastdiropened path=&quot;&quot; /&gt;
        ///	&lt;lpcencoding type=&quot;utf-8 (no signature)&quot; /&gt;
        ///	&lt;lpclineending type =&quot;Unix (LF)&quot; /&gt;
        ///	&lt;spellcheck_aff name =&quot;en_US.aff&quot; /&gt;
        ///	&lt;spellcheck_dic name =&quot;en_US.dic&quot; /&gt;
        ///
        ///	&lt;icons&gt;
        ///		&lt;icon file=&quot;\deathtrap.bmp&quot; desc=&quot;It&apos;s a trap!&quot;&gt;&lt;/icon&gt;
        ///		&lt;icon file=&quot;\entranceexit.bmp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string config1 {
            get {
                return ResourceManager.GetString("config1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;dirs.h&gt;
        ///#include &lt;rooms.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit LIB_ROOM;
        ///
        ///string FunkyPic();
        ///int CheckChat();
        ///int StartHeart(object ob);
        ///
        ///static void create() {
        ///    room::create();
        ///    SetClimate(&quot;indoors&quot;);
        ///    SetAmbientLight(30);
        ///    SetShort(&quot;off the mortal coil&quot;);
        ///    SetLong( (:FunkyPic:) );
        ///    SetObviousExits(&quot;no exit&quot;);
        ///    set_heart_beat(10);
        ///    SetNoModify(1);
        ///}
        ///
        ///void init(){
        ///    ::init();
        ///    add_action(&quot;regenerate&quot;,&quot;regenerate&quot;);
        ///    add_action(&quot;wander&quot;,&quot;wander&quot;);
        ///    t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string death {
            get {
                return ResourceManager.GetString("death", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap deathtrap {
            get {
                object obj = ResourceManager.GetObject("deathtrap", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit LIB_DOOR;
        ///
        ///static void create()
        ///	{
        ///    ::create();
        ///    
        ///	}
        ///void init(){
        ///    ::init();
        ///}.
        /// </summary>
        internal static string door {
            get {
                return ResourceManager.GetString("door", resourceCulture);
            }
        }
        
        internal static byte[] en_US {
            get {
                object obj = ResourceManager.GetObject("en_US", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 62118
        ///0/nm
        ///1/n1
        ///2/nm
        ///3/nm
        ///4/nm
        ///5/nm
        ///6/nm
        ///7/nm
        ///8/nm
        ///9/nm
        ///0th/pt
        ///1st/p
        ///1th/tc
        ///2nd/p
        ///2th/tc
        ///3rd/p
        ///3th/tc
        ///4th/pt
        ///5th/pt
        ///6th/pt
        ///7th/pt
        ///8th/pt
        ///9th/pt
        ///a
        ///A
        ///AA
        ///AAA
        ///Aachen/M
        ///aardvark/SM
        ///Aaren/M
        ///Aarhus/M
        ///Aarika/M
        ///Aaron/M
        ///AB
        ///aback
        ///abacus/SM
        ///abaft
        ///Abagael/M
        ///Abagail/M
        ///abalone/SM
        ///abandoner/M
        ///abandon/LGDRS
        ///abandonment/SM
        ///abase/LGDSR
        ///abasement/S
        ///abaser/M
        ///abashed/UY
        ///abashment/MS
        ///abash/SDLG
        ///abate/DSRLG
        ///abated/U
        ///abatement/MS
        ///abater/M
        ///abattoir/SM
        ///Abba/M
        ///Abbe/M
        ///abbé/S
        ///abbess/SM
        ///Abbey/M
        ///abbey/MS
        ///Abbie/M
        ///Abbi/M
        ///Abbot/M
        ///abbot/MS
        ///Ab [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string en_US1 {
            get {
                return ResourceManager.GetString("en_US1", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap entranceexit {
            get {
                object obj = ResourceManager.GetObject("entranceexit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap finalboss {
            get {
                object obj = ResourceManager.GetObject("finalboss", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap food {
            get {
                object obj = ResourceManager.GetObject("food", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;config.h&gt;
        ///#include &lt;rooms.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit LIB_ROOM;
        ///
        ///
        ///void create() {
        ///    room::create();
        ///    SetNoClean(1);
        ///    SetProperties(([ &quot;login&quot; : ROOM_START ]));
        ///    SetShort( &quot;The freezer&quot;);
        ///    SetLong( &quot;The local freezer.  Go down to leave.&quot;);
        ///    SetObviousExits(&quot;d&quot;);
        ///    SetExits( ([ &quot;down&quot; : ROOM_START ]) );
        ///    call_out(&quot;clean_room&quot;, MAX_NET_DEAD_TIME);
        ///    SetNoModify(1);
        ///}
        ///
        ///static void clean_room(){
        ///    object ob;
        /// 
        ///    foreach(ob in filter(all_inventory(),  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string freezer {
            get {
                return ResourceManager.GetString("freezer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit LIB_FURNACE;
        ///
        ///void create() {
        ///    furnace::create();
        ///}
        ///void init(){
        ///    ::init();
        ///}
        ///.
        /// </summary>
        internal static string furnace {
            get {
                return ResourceManager.GetString("furnace", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap galaxy9_bg {
            get {
                object obj = ResourceManager.GetObject("galaxy9_bg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap generalstore {
            get {
                object obj = ResourceManager.GetObject("generalstore", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap hiddenroom {
            get {
                object obj = ResourceManager.GetObject("hiddenroom", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap hospital {
            get {
                object obj = ResourceManager.GetObject("hospital", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Icon Icon2 {
            get {
                object obj = ResourceManager.GetObject("Icon2", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;deadsouls&gt;
        ///  &lt;!-- Describes the types of items that can be created. Also used for menu text --&gt;
        ///	&lt;itemclasses&gt;
        ///    &lt;!-- TODO Come up with a way of specifying which headers are included and objects are inherited --&gt;
        ///		&lt;itemclassdeclaration id=&quot;Armor&quot;&gt;armor&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Worn Storage&quot;&gt;worn storage&lt;/itemclassdeclaration&gt;
        ///	&lt;/itemclasses&gt;
        ///	
        ///	&lt;itemclass class =&quot;armor&quot;&gt;
        ///		&lt;control type=&quot;CheckBox&quot; paramtype=&quot;inherit&quot; text=&quot;Inher [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inheritedarmors {
            get {
                return ResourceManager.GetString("inheritedarmors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;deadsouls&gt;
        ///  &lt;!-- Describes the types of items that can be created. Also used for menu text --&gt;
        ///	&lt;itemclasses&gt;
        ///    &lt;!-- TODO Come up with a way of specifying which headers are included and objects are inherited --&gt;
        ///		&lt;itemclassdeclaration id=&quot;Armor&quot;&gt;armor&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Worn Storage&quot;&gt;worn storage&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Zuraki Gloves&quot;&gt;zurakigloves&lt;/itemclassdeclaration&gt;
        ///  &lt;/itemclasses&gt;
        ///	
        ///	&lt;item [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inheritedarmors1 {
            get {
                return ResourceManager.GetString("inheritedarmors1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;deadsouls&gt;
        ///  &lt;!-- Describes the types of items that can be created. Also used for menu text --&gt;
        ///	&lt;itemclasses&gt;
        ///		&lt;!-- TODO Come up with a way of specifying which headers are included and objects are inherited --&gt;
        ///		&lt;itemclassdeclaration id=&quot;Generic Item&quot;&gt;item&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Meal&quot;&gt;meal&lt;/itemclassdeclaration&gt;
        ///		&lt;/itemclasses&gt;
        ///	
        ///	&lt;!--
        ///	-&lt;itemclass&gt; describes what types of controls and functions are dynamically generated
        ///          /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inheriteditems {
            get {
                return ResourceManager.GetString("inheriteditems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;deadsouls&gt;
        ///  &lt;!-- Describes the types of items that can be created. Also used for menu text --&gt;
        ///	&lt;itemclasses&gt;
        ///		&lt;!-- TODO Come up with a way of specifying which headers are included and objects are inherited --&gt;
        ///		&lt;itemclassdeclaration id=&quot;Generic Item&quot;&gt;item&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Firearm&quot;&gt;firearm&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Ammo&quot;&gt;ammo&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Meal&quot;&gt;meal&lt;/itemclassd [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inheriteditems1 {
            get {
                return ResourceManager.GetString("inheriteditems1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;deadsouls&gt;
        ///  &lt;!-- Describes the types of items that can be created. Also used for menu text --&gt;
        ///	&lt;itemclasses&gt;
        ///    &lt;!-- TODO Come up with a way of specifying which headers are included and objects are inherited --&gt;
        ///		&lt;itemclassdeclaration id=&quot;Npc&quot;&gt;npc&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Sentient Npc&quot;&gt;sentient&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Vendor (sentient)&quot;&gt;vendor&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Barkeep ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inheritednpcs {
            get {
                return ResourceManager.GetString("inheritednpcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;deadsouls&gt;
        ///  &lt;!-- Describes the types of items that can be created. Also used for menu text --&gt;
        ///	&lt;itemclasses&gt;
        ///    &lt;!-- TODO Come up with a way of specifying which headers are included and objects are inherited --&gt;
        ///		&lt;itemclassdeclaration id=&quot;Npc&quot;&gt;npc&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Sentient Npc&quot;&gt;sentient&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Doctor (sentient)&quot;&gt;doctor&lt;/itemclassdeclaration&gt;
        ///		&lt;itemclassdeclaration id=&quot;Vendor (s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inheritednpcs1 {
            get {
                return ResourceManager.GetString("inheritednpcs1", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap interest {
            get {
                object obj = ResourceManager.GetObject("interest", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;damage_types.h&gt;
        ///#include &lt;vendor_types.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        //////Stellarmap Generator Metacode, do not modify
        //////StellarmapCode:Inherit
        ///
        ///static void create()
        ///	{
        ///	::create();
        ///	}
        ///
        ///void init()
        ///	{
        ///	::init();
        ///	}
        ///
        ///.
        /// </summary>
        internal static string item {
            get {
                return ResourceManager.GetString("item", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap lawmanoffice {
            get {
                object obj = ResourceManager.GetObject("lawmanoffice", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap lounge {
            get {
                object obj = ResourceManager.GetObject("lounge", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap node_8_un {
            get {
                object obj = ResourceManager.GetObject("node_8_un", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        //////Stellarmap Generator Metacode, do not modify
        //////StellarmapCode:Inherit
        ///
        ///
        ///static void create() {
        ///    ::create();
        ///	SetRace(&quot;human&quot;);
        ///    SetClass(&quot;vitalnpc&quot;);
        ///    SetLevel(10);
        ///    }
        ///
        ///void init(){
        ///    ::init();
        ///}
        ///.
        /// </summary>
        internal static string npc {
            get {
                return ResourceManager.GetString("npc", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap pawnshop {
            get {
                object obj = ResourceManager.GetObject("pawnshop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap petshop {
            get {
                object obj = ResourceManager.GetObject("petshop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;rooms.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit LIB_ROOM;
        ///
        ///void create() {
        ///    room::create();
        ///    SetAmbientLight(30);
        ///    SetShort(&quot;the incept pod&quot;);
        ///    SetLong(&quot;The incept pod. Some objects come here to be created &quot;+
        ///      &quot;and identified. Go down to get out.&quot;);
        ///    SetExits( ([ &quot;down&quot; : ROOM_START ]) );
        ///}
        ///int CanReceive(object ob){
        ///    return room::CanReceive(ob);
        ///}
        ///.
        /// </summary>
        internal static string pod {
            get {
                return ResourceManager.GetString("pod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2006-02-07 release.
        ///--
        ///This dictionary is based on a subset of the original
        ///English wordlist created by Kevin Atkinson for Pspell 
        ///and  Aspell and thus is covered by his original 
        ///LGPL license.  The affix file is a heavily modified
        ///version of the original english.aff file which was
        ///released as part of Geoff Kuenning&apos;s Ispell and as 
        ///such is covered by his BSD license.
        ///
        ///Thanks to both authors for there wonderful work.
        ///
        ///ChangeLog
        ///
        ///2006-02-07 nemeth AT OOo
        ///
        ///Issue 48060 - add ordinal numbers with COMPOUNDRULE ( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string README_en_US {
            get {
                return ResourceManager.GetString("README_en_US", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap repairshop {
            get {
                object obj = ResourceManager.GetObject("repairshop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap stargate {
            get {
                object obj = ResourceManager.GetObject("stargate", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;rooms.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit LIB_ROOM;
        ///
        ///void create() {
        ///    ::create();
        ///    SetClimate(&quot;indoors&quot;);
        ///    SetAmbientLight(30);
        ///    SetShort(&quot;a blank room&quot;);
        ///    SetLong(&quot;A featureless area.&quot;);
        ///}
        ///
        ///void init(){
        ///    ::init();
        ///}
        ///.
        /// </summary>
        internal static string start {
            get {
                return ResourceManager.GetString("start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///
        ///inherit LIB_STORAGE;
        ///
        ///
        ///static void create()
        ///	{
        ///	::create();
        ///	SetKeyName(&quot;thing&quot;);
        ///	SetId(({&quot;thing&quot;}));
        ///	SetShort(&quot;a thing&quot;);
        ///	SetLong(&quot;A thing.&quot;);
        ///	}
        ///
        ///void init()
        ///	{
        ///	::init();
        ///	}
        ///.
        /// </summary>
        internal static string storage {
            get {
                return ResourceManager.GetString("storage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit  LIB_TRAINER;
        ///void create(){
        ///    ::create();
        ///    SetKeyName(&quot;trainer&quot;);
        ///    SetId(&quot;generic trainer&quot;);
        ///    SetShort(&quot;a generic trainer&quot;);
        ///    SetLong(&quot;This is a person whose job it is to teach you things. &quot;+
        ///            &quot;For example, &apos;ask trainer &quot;+
        ///            &quot;to teach wibbling&apos; would prompt him to begin a wibble learning &quot;+
        ///            &quot;lesson with you, if wibbling is in his skill set and you have &quot;+
        ///            &quot;earned sufficient training points. If you l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string trainer {
            get {
                return ResourceManager.GetString("trainer", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap updown {
            get {
                object obj = ResourceManager.GetObject("updown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap vehicles {
            get {
                object obj = ResourceManager.GetObject("vehicles", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;vendor_types.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        //////Stellarmap Generator Metacode, do not modify
        ///inherit LIB_VENDOR;
        //////StellarmapCode:Inherit
        ///
        ///
        ///static void create() {
        ///    ::create();
        ///    SetKeyName(&quot;vendor&quot;);
        ///    SetId( ({ &quot;shopkeep&quot; }) );
        ///    SetAdjectives( ({ &quot;generic&quot; }) );
        ///    SetShort(&quot;a generic vendor&quot;);
        ///    SetLong(&quot;A nondescript person whose job it is to sell things.&quot;);
        ///    
        ///    SetGender(&quot;male&quot;);
        ///    SetRace(&quot;human&quot;);
        ///    SetClass(&quot;vitalnpc&quot;);
        ///    SetLevel(1) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string vendor {
            get {
                return ResourceManager.GetString("vendor", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap weapons {
            get {
                object obj = ResourceManager.GetObject("weapons", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;lib.h&gt;
        ///#include &lt;rooms.h&gt;
        ///#include &quot;../include.h&quot;
        ///
        ///inherit LIB_ROOM;
        ///
        ///static void create() {
        ///    object ob;
        ///    room::create();
        ///    SetClimate(&quot;indoors&quot;);
        ///    SetAmbientLight(30);
        ///    SetShort(&quot;Creators&apos; Hall&quot;);
        ///    SetLong(&quot;A generic Wiz Hall.&quot;);
        ///    SetProperty(&quot;no attack&quot;, 1);
        ///    SetProperty(&quot;nopeer&quot;,1);
        ///}
        ///
        ///int CanReceive(object ob) {
        ///    if(playerp(ob) &amp;&amp; !creatorp(ob) &amp;&amp; !present(&quot;testchar badge&quot;,ob)) {
        ///	message(&quot;info&quot;,&quot;Creator staff only, sorry.&quot;, ob);
        ///	return 0;
        ///    }
        ///    return ::CanRecei [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiz_hall {
            get {
                return ResourceManager.GetString("wiz_hall", resourceCulture);
            }
        }
    }
}
