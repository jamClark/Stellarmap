<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        06uEhuxGAAAAAElFTkSuQmCC
</value>
  </data>
</root>