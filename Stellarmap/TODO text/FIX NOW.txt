-mappings need to not freak out when something is malformed in the input
-Allow PK flag for rooms
X-Find out why extra SetAction(), SetCombatAction() and SetSkill() functions are added. most likely it is when one is added then removed.
?-Fix SetConsult(string)
O-Add SetTouch(mapping) to room editor.
O-(code doesn't work?)-SetCanFly/Swim/Stand/Sit/Kneel/
O-SetFlyRoom/SetSinkRoom/()
X-SetRespirationType()
O-int CanReceive(object ob){
X-change $ to something less frequently used

NEXT UP:
X-allow mappings to have arrays for keys so that SetItems generated by QCS can be imported
-when an exception is thrown in the parser for array/mapping-basedfunction controls, all the other entries appear to be removed.
-edit keys and values in mappings

PROBLEMS:
X-importing rooms no longer imports their info - it is set to the default values when clicked!!!




-what about ammo folders?
-ftp upload/download
-min/max values are not working in dynamic function controls

-tree-view list for inventory
-compound mappings - arrays for key



hard:
-sync checker that ensures all files don't have uneeded file references / static items     removing a static item needs to remove all exits and enters based on it, which in turn need to remove any doors based on them
	-note: this should be a manual option. otherwise the user might simply want to remove a static item so that they can change the description text and *poof* all of the other references would be gone too.
-rename room files
-fully configurable generator

STELLARMASS TODO:
-Add LIB_SPACESUIT
-SetDropInventoryOnDeath
-SetDropRates


MAJOR BUGS:
-No escape sequence for quotes. Quotes get stripped from beginning of strings in textboxes (should escape them in string liters during Process* commands)
-Users should not be allowed to type spaces in variables. Should only be allowed with functionals.
-Trying to type '$' in a nonstring entry should raise an exception
-No escape sequence for $


MINOR BUGS:
-wheel scrolling in map view also scrolls main window - need to make sure window scroll
 bar doesn't show up and restoring windows size (from maximized) unless window edit panel
 is below allowed threshold


FEATURES NEXT UP:
-snap to grid for room in domain map
-allow 'add existing room'
-import inventory items and doors into workspace
-allow users to rename roomfiles
-delete unreferenced files from domain during save
-clean up unneeded newlines and tabs in codefiles during save
-Tooltip over rooms for names
-change loader to standard file display rather than a folder browser
-add credits for april's image in help




FUTURE FEATURES:
-basic text entry for OnEnter and OnExit events of rooms. Nothing special, just for dispalying text



UNCONFIRMED BUGS:
-FIXED ???: failure to load a room file should not stop the whole domain from loading
-FIXED ???: deleting a room can cause adjacent rooms' icons to reset to default
-FIXED ???: Removed hardcoded '\\room' directory
	- DomainModelx2 - line 454 = DeadSouls.Globals.DomainFiles.GenerateFiles(this.RootDirectory + "\\room");
	- RoomModelx2 - line 52 = string fullFilePath = model.DomainRootDir + "\\room\\" + RawFileName;

-IMPORTANT: There is some kind of unconfirmed bug with deleting room connections. It wasn't reproduceable
		but the general problem was that room exist would be distributed to the hilighted room if it wasn't
		the one having its exits deleted and if it was the one, it would delete all exits instead of just one.





OTHER MINOR BUGS:
-If there are entries passed to a checkboxlist that the list does not already have,
 they will be ignored and removed. We CANNOT be changing code like this!
 (Proposed solution: When loading codefiles, post a warning message about pential changes
  and ask if they really want to import)

-Should probably convert newlines in long text boxes to '\n' characters when exporting to lpc file.

-mapbuilders and checklists have a problem where it is not intuitive to determine if the
 value in the key:value pairs is a number literal or a string literal. Make a seperate
 version for numbers only (mapbuilders_numbervalue, checklists_numbervalue)


-*checklists for arrays and OR-lists only store the Label of the control rather than the data. The data gets
  converted to 1 or 0 only

-*checklist does not preserve value passed to mappings. It only outputs the state of
 the check which is either 1 or 0
 
		* not sure if I should "fix" this or not